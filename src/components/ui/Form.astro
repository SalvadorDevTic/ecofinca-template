---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';

const { inputs, textarea, disclaimer, button = 'Enviar', description = '' } = Astro.props;
// const dentro = () =>{

// }
---

<form id="fc" action="">
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '', value = '' }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                value={value}
                autocomplete={autocomplete}
                placeholder={placeholder}
                required
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <Button variant="primary" type="submit" id="btnf">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>

<script>
  const buttonForm = document.querySelector('#btnf');
  const formfull = document.querySelector('#fc')?.getElementsByTagName('input');
  let body = {
    name: '',
    email: '',
    _next: 'https://ecofinca-puravida.netlify.app/',
    _captcha: false,
    disclaimer: false,
  };

  const sendForm = async () => {
    //test validate input
    if (formfull) {
      // console.log('formfull');
      // console.log(formfull);
      if (
        formfull[0].validationMessage.trim().length === 0 &&
        formfull[1].validationMessage.trim().length === 0 &&
        formfull[2].validationMessage.trim().length === 0
      ) {
        console.log('dentro');
        for (let index = 0; index < formfull.length; index++) {
          const name = formfull[index].name;
          const value = formfull[index].value;
          let checkedDisclaimer = false;
          if (name === 'disclaimer') {
            checkedDisclaimer = formfull[index].checked;
            body = { ...body, [name]: checkedDisclaimer };
          } else {
            body = { ...body, [name]: value };
          }
        }
        console.log('body');
        console.log(body);
        console.log('************');
        sFormApi();
      } else {
        console.log('dentro else ');
      }
    }
  };

  const sFormApi = async () => {
    fetch('https://formsubmit.co/ajax/755957f1b453984cb4876dfc0725caa8', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/json',
      },
      body: JSON.stringify(body),
    })
      .then((response) => response.json())
      .then((data) => {
        viewToast();
        console.log(data);
      })
      .catch((error) => console.log(error));
  };

  const viewToast = () => {
    const toast = document.querySelector('#toast-top-right');
    toast?.classList.toggle('hidden');
    setTimeout(() => {
      toast?.classList.toggle('hidden');
    }, 3000);
  };

  buttonForm?.addEventListener('click', sendForm);
</script>
